import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import Trending from '../components/Trending';
import styles from '../styles/Home.module.css'
import getMainPageData from '../services/getMainPageData';
import TrendingTable from '../components/TrendingTable'
import { FaRedditAlien, FaTwitter, FaDiscord } from "react-icons/fa"
import Communities from '../components/Communities';
import Header from '../components/Header';
import { useTheme } from '../lib/ThemeContext'
import { translations } from '../data/lang'

interface Propping {
  trends: Array<{
    name: string;
    id: string;
    dateStamp: string;
    image: string;
    thumbnail?: string;
    banner?: string;
    description?: string;
    totalSupply: number;
    floorPrice: string;
    floorChange24h: number;
    dailyTradeVolumeETH: string;
    dailyTradedItemCount: number;}>
}

export default function Home({trends}: Propping) {

  const { darkMode, setDarkMode } = useTheme()
  const { menuOpen, setMenuOpen } = useTheme()
  const { language, setLanguage } = useTheme()

  useEffect(() => {

    if (darkMode)
    {
      document.documentElement.classList.add("dark")
    }
    else
    {
      document.documentElement.classList.remove("dark")
    }

  }, [darkMode])

  useEffect(() => {

    if (menuOpen)
    {
      document.body.classList.add("overflow-hidden")
    }
    else
    {
      document.body.classList.remove("overflow-hidden")
    }

  }, [menuOpen])

  function getTranslation(lang:string, text:string) {

    if (language)
    {
    //@ts-ignore
    return translations[lang][text]
    }
    
  }

  return (
    <div className="font-inter dark:text-white text-neutral-900">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <div className="fixed left-0 right-0 top-0 bottom-0 bg-gradient-to-b dark:from-slate-900 dark:to-black from-white to-slate-500">
      </div>
      
      <main className="px-6 flex flex-col gap-y-12 md:text-xl z-10">

        <h1 className="font-bold text-5xl pt-6 z-10">
          <div className="text-center drop-shadow-[0_1px_1px_rgba(0,0,0,1)]">{getTranslation(language!, "main")}</div>
        </h1>

        <h2 className="font-semibold text-lg z-10">
          <Trending trends={trends} />
        </h2>

        <div className="z-10 flex font-bold text-xl md:text-2xl lg:text-3xl justify-center">{getTranslation(language!, "nowtrending")}</div>

        <h3 className="z-10">
          <TrendingTable trends={trends} />
        </h3>
        
        <div className="rounded-md bg-slate-600/20 hover:bg-slate-600/40 hover:cursor-pointer p-2 text-white lg:max-w-[50%] shadow-md w-10/12 self-center z-10 transition-all ease-in-out">
          <div className="flex items-center justify-center">{getTranslation(language!, "exploreall")}</div>
        </div>

        <div className="z-10 shadow-md">
          <Communities />
        </div>

        <div className="z-10 py-16 relative">
          <div className="md:grid md:grid-cols-2">
            <div className="place-self-center md:pl-16 lg:pl-24 xl:pl-36 relative z-20">
              <div className="text-4xl xl:text-5xl font-bold">
              {getTranslation(language!, "earn1")}<span className="bg-gradient-to-r from-red-500 via-green-500 to-blue-500 animate-text bg-clip-text text-transparent">9000.12%</span>{getTranslation(language!, "earn2")}
              </div>
              <br />
              <div className="">
              {getTranslation(language!, "stake1")}<span className="font-bold">{getTranslation(language!, "stake2")}</span>{getTranslation(language!, "stake3")}
              </div>
              <br />
              <button className="px-6 py-4 text-white bg-slate-800/20 hover:bg-slate-900/30 dark:bg-slate-700 rounded-lg dark:hover:bg-slate-500 transition-all ease-in-out shadow-md">
              {getTranslation(language!, "learnmore")}
              </button>
            </div>
            <div className="place-self-center absolute top-0 -right-5 xl:-right-10 overflow-clip lg:overflow-visible md:relative">
              <img className="-scale-[0.9] md:-scale-[1] lg:-scale-[1.3] rotate-[30deg] grayscale md:contrast-50 opacity-25 md:opacity-50" src="../coin.svg"/>
            </div>
          </div>
        </div>

        <div className="bg-slate-600/20 pb-4 rounded-md shadow-md z-10 lg:min-w-[50%] lg:self-center">
          <div className="font-semibold flex justify-center items-center pt-2 pb-4">{getTranslation(language!, "joincommunity")}</div>
          <div className="flex flex-row justify-evenly">
            <button className="p-2 text-4xl md:text-5xl rounded-md bg-slate-200/20 hover:bg-[#5865F2] transition-all ease-in-out shadow-md hover:text-white"><FaDiscord /></button>
            <button className="p-2 text-4xl md:text-5xl rounded-md bg-slate-200/20 hover:bg-blue-500 transition-all ease-in-out shadow-md hover:text-white"><FaTwitter /></button>
            <button className="p-2 text-4xl md:text-5xl rounded-md bg-slate-200/20 hover:bg-orange-500 transition-all ease-in-out shadow-md hover:text-white"><FaRedditAlien /></button>
          </div>
        </div>

        <div className="grid grid-cols-4 justify-items-center gap-y-4 z-10 lg:w-[50%] lg:self-center">
          <button className="footer-button">{getTranslation(language!, "about")}</button>
          <button className="footer-button">{getTranslation(language!, "api")}</button>
          <button className="footer-button">{getTranslation(language!, "contact")}</button>
          <button className="footer-button">{getTranslation(language!, "careers")}</button>
          <button className="footer-button">{getTranslation(language!, "docs")}</button>
          <button className="footer-button">{getTranslation(language!, "help")}</button>
          <button className="footer-button">{getTranslation(language!, "newsletter")}</button>
          <button className="footer-button">{getTranslation(language!, "terms")}</button>
        </div>

        <div className="border-t-[1px] flex flex-col py-4 justify-center items-center z-10 lg:w-[75%] lg:self-center">
          <div>NFTSITE - 2022</div>
          <div>An @uncoolzero industries product</div>
        </div>
      </main>

    </div>
  )
}

//@ts-ignore
export const getStaticProps = async() => {

  const trends = await getMainPageData()

  return {
    props: {
      trends
    },
    revalidate: 300
  }
}
